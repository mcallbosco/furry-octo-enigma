PROJECT FOE, Create a code grading system based on machine learning.

5/17
    I have no idea what I am doing or what I'm going to do.

    First part is creating a dataset though so I should focus on that. I will focus on C++ until I have a good method for creating a dataset for programing langues that has some kind of grading.
    Questions to answer
        How do you assign a grade to each snippet in the database for the model to learn from?
            IDEAS:
                Generate a quality likelihood score (0-1) based on:
                    (The Codebase)
                        The number of revisions the code has had based on previous commits (FOUND A WAY TO DO)
                            USE GIT log
                            Command 'git --no-pager log --pretty=oneline -L :main:main.cc > log.txt'
                            TODO: WRITE PARSER FOR THIS
                            
                        
                        
                        path/to/myfile.c, it will now happily print the change history of that function.
                            git --no-pager log --no-notes -L :main:main.cc > log.txt


                        
                        The number of stars on the repo
                            https://pygithub.readthedocs.io/en/latest/examples/Repository.html#:~:text=Get%20count%20of%20stars%20%C2%B6%20%3E%3E%3E%20repo%20%3D,%3D%20repo.get_issues%28state%3D%27open%27%29%20%3E%3E%3E%20for%20issue%20in%20open_issues%3A...%20print%28issue%29
                        The number of forks on the repo
                        The number of commits on the piece of code? ()
                        The number of contributors on the repo (Over 100 is a good indicator)
                    (The user who wrote the code)
                        Activity on current project
                    TODO:
                        Figure out how to pull this information
                        Figure out how each value will be weighted
        How do you create a dataset for the model to learn from?
            IDEAS:
                Separate the code into methods that has a quality likleyhood score generated for each one
                    Figure out pygccxml to brake the code down into compiler level information
        How do you create a model and train it?
                





